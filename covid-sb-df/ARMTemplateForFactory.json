{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid-sb-df"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"AzureDataLakeStorage_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covidsbstac2.dfs.core.windows.net"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://covid-sb-kv.vault.azure.net/"
		},
		"CovidIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "covid-sb.database.windows.net"
		},
		"CovidIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "azureadmin"
		},
		"CovidIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"covid-sb-IR-2020-08-14T12-57-27Z_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "covid-sb.database.windows.net"
		},
		"covid-sb-IR-2020-08-14T12-57-27Z_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "azureadmin"
		},
		"covid-sb-IR-2020-08-14T12-57-27Z_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Main pipeline for covid project",
				"activities": [
					{
						"name": "Execute prepare_CovidFile",
						"description": "Execute prepare_CovidFile pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set FileName_output",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Prepare_CovidFile",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"FileName_input": {
									"value": "@pipeline().parameters.FileName_input",
									"type": "Expression"
								},
								"FileName_output": {
									"value": "@variables('FileName_output')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute staging_Covid_untyped",
						"description": "Execute staging_Covid_untyped pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute prepare_CovidFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load_staging_Covid_untyped",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"FileName_prepared": {
									"value": "@variables('FileName_output')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set FileName_output",
						"description": "Set FileName_output variable based on FileName_input parameter",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName_output",
							"value": {
								"value": "@concat(substring(pipeline().parameters.FileName_input, 0, lastindexof(pipeline().parameters.FileName_input, '.csv')), \n'_',formatDateTime(utcnow(), 'yyyy_MM_dd'), '_prepared.csv')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FileName_input": {
						"type": "string",
						"defaultValue": "CoordStatusMA_Short.csv"
					}
				},
				"variables": {
					"FileName_output": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Prepare_CovidFile')]",
				"[concat(variables('factoryId'), '/pipelines/Load_staging_Covid_untyped')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_staging_Covid_untyped')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load data from prepared file into Azure SQL",
				"activities": [
					{
						"name": "copy_prepared_file_staging_untyped",
						"description": "Copy prepared CovidFile from DataLake into staging ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE staging.Covid_untyped",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PreparedCovidFile",
								"type": "DatasetReference",
								"parameters": {
									"FileName_prepared": {
										"value": "@pipeline().parameters.FileName_prepared",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Covid_untyped",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"FileName_prepared": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PreparedCovidFile')]",
				"[concat(variables('factoryId'), '/datasets/staging_Covid_untyped')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PreparedCovidFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Prepared file for staging",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName_prepared": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName_prepared",
							"type": "Expression"
						},
						"folderPath": "output",
						"fileSystem": "covidsbcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					},
					{
						"name": "Count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Covid_untyped')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "Date",
						"type": "nvarchar"
					},
					{
						"name": "Latitude",
						"type": "nvarchar"
					},
					{
						"name": "Longitude",
						"type": "nvarchar"
					},
					{
						"name": "Count",
						"type": "nvarchar"
					},
					{
						"name": "sysCreatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysChangedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysCreatedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysChangedBy",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "Covid_untyped"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service for Azure Data Lake Storage Gen2",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_LS_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service to Azure Databricks cluster",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2033260146176876.16.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/40f083ce-f68e-476b-af9b-60ac84e7a6fc/resourceGroups/covid-sb-rg/providers/Microsoft.Databricks/workspaces/covid-sb-databricks-service",
					"existingClusterId": "0325-062347-pegs613"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CovidIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "Covid integration runtime",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"nodeSize": "Standard_D1_v2",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('CovidIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('CovidIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('CovidIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/covid-sb-IR-2020-08-14T12-57-27Z')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('covid-sb-IR-2020-08-14T12-57-27Z_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('covid-sb-IR-2020-08-14T12-57-27Z_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('covid-sb-IR-2020-08-14T12-57-27Z_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "BasePrice"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prepare_CovidFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Prepare Covid file for staging",
				"activities": [
					{
						"name": "prepare_covid_file_task",
						"description": "Notebook activity for preparation covid file for staging",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/sergei_boikov@epam.com/CovidProjectNotebooks/TransformCovidFileDL",
							"baseParameters": {
								"FileName_input": {
									"value": "@pipeline().parameters.FileName_input",
									"type": "Expression"
								},
								"FileName_output": {
									"value": "@pipeline().parameters.FileName_output",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"FileName_input": {
						"type": "string"
					},
					"FileName_output": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_LS')]"
			]
		}
	]
}